version: "3.9"
services:
  clickhousedb:
    image: clickhouse/clickhouse-server:latest
    container_name: openfms-clickhouse
    ports:
      - ${CH_HTTP_PORT:-8123}:8123
      - ${CH_PORT:-9000}:9000
    networks:
      - netonika
    volumes:
      - clickhouse-volume:/var/lib/clickhouse
    environment:
      CLICKHOUSE_USER: ${CH_USER:-admin}
      CLICKHOUSE_PASSWORD: ${CH_PASSWORD:-12345678}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_DB: ${CH_DB:-default}
    healthcheck:
      test: [ "CMD","wget","-q","clickhousedb:8123/ping" ]
      interval: 3s
      timeout: 45s
      retries: 15
    mem_limit: 2G
    mem_reservation: 1G

  postgresdb:
    image: postgres:latest
    container_name: openfms-postgres
    ports:
      - ${PGDB_PORT:-5432}:5432
    volumes:
      - pgdb-volume:/data/postgres
    environment:
      POSTGRES_USER: ${PGDB_USER:-admin}
      POSTGRES_PASSWORD: ${PGDB_PASSWORD:-12345678}
      POSTGRES_DB: ${PGDB_NAME:-pgdb}
      PGDATA: /data/postgres

    networks:
      - netonika
    healthcheck:
      test: [ "CMD", "pg_isready", "-h", "postgresdb","-p","5432","-d","${PGDB_NAME:-pgdb}","-U","${PGDB_USER:-admin}", "-q" ]
      timeout: 20s
      interval: 3s
      retries: 15
    restart: always

  avldb-migrations:
    image: avldb-migrations:latest
    container_name: openfms-avldb-migrations
    build:
      context: ./migrations/avldb
      dockerfile: Dockerfile
    environment:
      DATABASE_DRIVER: clickhouse
      MIGRATIONS_PATH: migrations/sqls
      DATABASE_URL: clickhouse://${CH_USER:-admin}:${CH_PASSWORD:-12345678}@clickhousedb:9000/default
    command: [ "up" ]
    depends_on:
      clickhousedb:
        condition: service_healthy
    networks:
      - netonika

  nats:
    image: nats:latest
    container_name: openfms-nats
    ports:
      - ${NATS_PORT:-4222}:4222
      - ${NATS_HTTP_PORT:-8222}:8222
    networks:
      - netonika

  teltonika-device:
    image: teltonikadevice:latest
    container_name: openfms-teltonika-device
    build:
      context: ./device/teltonika
      dockerfile: Dockerfile
      args:
        GO_VERSION: "1.20"
    ports:
      - ${DEVICE_SRV_PORT:-6060}:3000
    environment:
      NATS: "nats:4222"
      AVLDB_CLICKHOUSE: "clickhouse://${CH_USER:-admin}:${CH_PASSWORD:-12345678}@clickhousedb:9000/default?dial_timeout=200ms&max_execution_time=60"
    command: [ "server", "-p", "3000" ]
    networks:
      - netonika
    depends_on:
      clickhousedb:
        condition: service_healthy
      nats:
        condition: service_started
      avldb-migrations:
        condition: service_completed_successfully
    restart: always

  tracking-api:
    image: tracking-api:latest
    container_name: openfms-tracking
    build:
      context: ./fmsapi/tracking-api
      dockerfile: Dockerfile
      args:
        GO_VERSION: "1.20"
    environment:
      NATS: "nats:4222"
      LOG_REQUESTS: true
      AVLDB_CLICKHOUSE: clickhouse://${CH_USER:-admin}:${CH_PASSWORD:-12345678}@clickhousedb:9000/default?dial_timeout=200ms&max_execution_time=60
      FMSDB_POSTGRES: postgres://${PGDB_USER:-admin}:${PGDB_PASSWORD:-12345678}@postgresdb:5432/${PGDB_NAME:-pgdb}?sslmode=disable
    command: [ "tracking", "-p", "6000" ]
    networks:
      - netonika
    depends_on:
      nats:
        condition: service_started
      postgresdb:
        condition: service_healthy
      avldb-migrations:
        condition: service_completed_successfully
    restart: always

  grpc-gateway:
    image: grpc-gateway:latest
    container_name: openfms-gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
      args:
        GO_VERSION: "1.20"
    environment:
      TRACKING_ENDPOINT: "tracking-api:6000"
    command: [ "start", "-p", "5000" ]
    ports:
      - "8080:5000"
    networks:
      - netonika
    depends_on:
      tracking-api:
        condition: service_started
    restart: always

networks:
  netonika:
    driver: bridge
volumes:
  clickhouse-volume:
  pgdb-volume: